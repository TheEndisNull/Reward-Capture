#setup====
list.of.packages <- c("tidyverse", "patchwork", "BayesFactor")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
data <- read_csv(
"exp2 data/merged_file.csv",
col_types = cols(
rt = col_double(),
color = col_skip(),
tgtPosition = col_character(),
rewardType = col_character(),
reward = col_skip(),
colorPosition = col_character(),
correct = col_factor(levels = c("FALSE", "TRUE", "null"))
)
)
data <- read_csv(
"exp2_data/merged_file.csv",
col_types = cols(
rt = col_double(),
color = col_skip(),
tgtPosition = col_character(),
rewardType = col_character(),
reward = col_skip(),
colorPosition = col_character(),
correct = col_factor(levels = c("FALSE", "TRUE", "null"))
)
)
#setup====
list.of.packages <- c("tidyverse", "patchwork", "BayesFactor")
library('tidyverse')
data <- read_csv(
"exp2_data/merged_file.csv",
col_types = cols(
rt = col_double(),
color = col_skip(),
tgtPosition = col_character(),
rewardType = col_character(),
reward = col_skip(),
colorPosition = col_character(),
correct = col_factor(levels = c("FALSE", "TRUE", "null"))
)
)
data <- read_csv(
"exp2 data/merged_file.csv",
col_types = cols(
rt = col_double(),
color = col_skip(),
tgtPosition = col_character(),
rewardType = col_character(),
reward = col_skip(),
colorPosition = col_character(),
correct = col_factor(levels = c("FALSE", "TRUE", "null"))
)
)
library(readr)
data<- read_csv("exp2 data/merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer()))
View(data)
data<- read_csv("exp2 data/merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer(),
...13 = col_skip()))
View(data)
data <- tibble::as_tibble(data)
data <- filter(
data,
trialType == "RSVPtest",
rt > quantile(data$rt, 0.025, na.rm = TRUE),
subject != 'eqmlqlfqyt' &
subject != 'vv89j7ugm9' &
subject != '7ymfqhmnuy' &
subject != 'bcrsgmz11l'
) %>%
select(subject, rt, correct, rewardType, tgtPosition, colorPosition)
data<- read_csv("exp2 data/merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer(),
...13 = col_skip()))
View(data)
data <- tibble::as_tibble(data)
data
library('tidyverse')
library('Cairo')
library(readr)
data<- read_csv("exp2 data/merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer(),
...13 = col_skip()))
data
data<- read_csv("exp2 data/merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer(),
...13 = col_skip()))
data
View(data)
data
View(data)
data <- tibble::as_tibble(data)
data
data<- read_csv("merged_file.csv",
col_types = cols(correct = col_logical(),
rt = col_double(), rwdType = col_integer(),
tgtPos = col_integer(), colPos = col_integer(),
colMatch = col_integer(),
...13 = col_skip()))
data
data <- read_csv(
"merged_file.csv",
col_types = cols(
correct = col_logical(),
rt = col_double(),
rwdType = col_integer(),
tgtPos = col_integer(),
colPos = col_integer(),
colMatch = col_integer()
)
)
View(data)
data
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21 oLD/HLN Graph.R", echo=TRUE)
library(readr)
data <- read_csv(
"merged_file.csv",
col_types = cols(
correct = col_logical(),
rt = col_double(),
rwdType = col_integer(),
tgtPos = col_integer(),
colPos = col_integer(),
colMatch = col_integer()
)
)
View(data)
data <- tibble::as_tibble(data)
data <- filter(data,
trialType == "RSVPtest",
rt > quantile(data$rt, 0.025, na.rm = TRUE),) %>%
select(subject, rt, correct, rwdType, tgtPos, colMatc)
data$subject <- as.factor(data$subject)
rewardIdx = c('high', 'low', 'none')
nameRwd = c('H', 'L', 'N')
for (i in 1:2) {
assign(
paste0('TACA_', nameRwd[i]),
bind_cols(
filter(
data,
rwdType == rewardIdx[i],
tgtPos == as.character(colorPosition),
correct == "TRUE"
) %>%
group_by(subject, .drop = F) %>%
summarize(Hits = n(),
rt = median(rt)) %>%
select(subject, rt, Hits),
filter(
data,
rwdType == rewardIdx[i],
tgtPos == as.character(colorPosition),
correct == "FALSE"
) %>%
group_by(subject, .drop = F) %>%
summarize(Misses = n()) %>%
select(Misses),
filter(data,
rwdType == rewardIdx[i],
tgtPos == "new",
correct == "FALSE") %>%
group_by(subject, .drop = F) %>%
summarize(False_Alarms = n()) %>%
select(False_Alarms),
filter(data,
rwdType == rewardIdx[i],
tgtPos == "new",
correct == "TRUE") %>%
group_by(subject, .drop = F) %>%
summarize(Rejections = n()) %>%
select(Rejections)
) %>%
mutate(
H_Sum = Hits + Misses,
Hit_Rate = Hits / H_Sum,
Corrected_HR = ifelse(
Hit_Rate == 1,
(Hits - 0.5) / H_Sum,
ifelse(Hit_Rate == 0, (Hits + 0.5) / H_Sum, Hit_Rate)
),
F_Sum = False_Alarms + Rejections,
False_Alarm_Rate = False_Alarms / F_Sum,
Corrected_FA = ifelse(
False_Alarm_Rate == 1,
(False_Alarms - 0.5) / F_Sum,
ifelse(
False_Alarm_Rate == 0,
(False_Alarms + 0.5) / F_Sum,
False_Alarm_Rate
)
),
dprime = qnorm(Corrected_HR) - qnorm(Corrected_FA),
criterion = -(qnorm(Corrected_HR) + qnorm(Corrected_FA)) / 2,
reward = as.factor(replicate(n = n(), rewardIdx[i])),
target = as.factor(c(replicate(n(
), "All"))),
color = as.factor(c(replicate(n(
), "All")))
) %>%
rename(HR = Corrected_HR,
FA = Corrected_FA) %>%
filter(Hits != 0) %>%
select(subject, rt, dprime, criterion, HR, FA, target, color, reward)
)
}
assign(
paste0('TACA_', nameRwd[3]),
bind_cols(
filter(data,
rwdType == rewardIdx[3],
tgtPos != 'new',
correct == "TRUE") %>%
group_by(subject, .drop = F) %>%
summarize(Hits = n(),
rt = median(rt)) %>%
select(subject, rt, Hits),
filter(data,
rwdType == rewardIdx[3],
tgtPos != 'new',
correct == "FALSE") %>%
group_by(subject, .drop = F) %>%
summarize(Misses = n()) %>%
select(Misses),
filter(data,
rwdType == rewardIdx[3],
tgtPos == "new",
correct == "FALSE") %>%
group_by(subject, .drop = F) %>%
summarize(False_Alarms = n()) %>%
select(False_Alarms),
filter(data,
rwdType == rewardIdx[3],
tgtPos == "new",
correct == "TRUE") %>%
group_by(subject, .drop = F) %>%
summarize(Rejections = n()) %>%
select(Rejections)
) %>%
mutate(
H_Sum = Hits + Misses,
Hit_Rate = Hits / H_Sum,
Corrected_HR = ifelse(
Hit_Rate == 1,
(Hits - 0.5) / H_Sum,
ifelse(Hit_Rate == 0, (Hits + 0.5) / H_Sum, Hit_Rate)
),
F_Sum = False_Alarms + Rejections,
False_Alarm_Rate = False_Alarms / F_Sum,
Corrected_FA = ifelse(
False_Alarm_Rate == 1,
(False_Alarms - 0.5) / F_Sum,
ifelse(
False_Alarm_Rate == 0,
(False_Alarms + 0.5) / F_Sum,
False_Alarm_Rate
)
),
dprime = qnorm(Corrected_HR) - qnorm(Corrected_FA),
criterion = -(qnorm(Corrected_HR) + qnorm(Corrected_FA)) / 2,
reward = as.factor(replicate(n = n(), rewardIdx[3])),
target = as.factor(c(replicate(n(
), "All"))),
color = as.factor(c(replicate(n(
), "All")))
) %>%
rename(HR = Corrected_HR,
FA = Corrected_FA) %>%
filter(Hits != 0) %>%
select(subject, rt, dprime, criterion, HR, FA, target, color, reward)
)
TACA_H
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21 oLD/HLN Graph.R", echo=TRUE)
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21 oLD/HLN Graph.R", echo=TRUE)
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21 oLD/HLN Graph.R", echo=TRUE)
