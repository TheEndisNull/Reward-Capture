data <- tibble(
a1=as.double(1:subCnt),
a2=as.double(1:subCnt)
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
lohi1 <-count(m,P1Conf=='lo')
lohi1 <- lohi1[2,2]/(count(m))
lohi2 <-count(m,P2Conf=='lo')
lohi2 <- lohi2[2,2]/(count(m))
data[i,1]=lohi1
data[i,2]=lohi2
}
data
data
data <- tibble(
PlowConf1=as.double(1:subCnt),
PlowConf2=as.double(1:subCnt)
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
loConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
loConf2 <- loConf2[2,2]/(count(m))
data[i,1]=loConf1
data[i,2]=loConf2
}
data
source('C:/Users/Jonathan Yuquimpo/OneDrive - University of Illinois - Urbana/r_metacognition/Simulation Trials Script.R', echo=TRUE)
m
count(m,P1Conf=='lo'& P1Acc=='w')
loConf1 <-count(m,P1Conf=='lo')
loConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
loConf2 <- loConf2[2,2]/(count(m))
data[i,1]=loConf1
data[i,2]=loConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
lowAndw1 <- lowAndw1[2,2]/loConf1
lowAndw1
loConf1
View(loConf1)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
PlowAndw1
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
colLength <- 200
subCnt <- 20
data <- tibble(
lowConf1=as.double(1:subCnt),
lowConf2=as.double(1:subCnt),
lowAndw1=as.double(1:subCnt),
lowAndw2=as.double(1:subCnt)
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
}
data
colLength <- 200
subCnt <- 20
data <- tibble(
lowConf1=as.double(1:subCnt),
lowConf2=as.double(1:subCnt),
lowAndw1=as.double(1:subCnt),
lowAndw2=as.double(1:subCnt),
hiConf1=as.double(1:subCnt),
hiConf2=as.double(1:subCnt),
hiAndw1=as.double(1:subCnt),
hiAndw2=as.double(1:subCnt)
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
#################
hiConf1 <-count(m,P1Conf=='hi')
PhiConf1 <- hiConf1[2,2]/(count(m))
hiConf2 <-count(m,P2Conf=='hi')
PhiConf2 <- hiConf2[2,2]/(count(m))
data[i,5]=PhiConf1
data[i,6]=PhiConf2
hiwAndw1 <- count(m,P1Conf=='hi'& P1Acc=='w')
PhiwAndw1 <- hiwAndw1[2,2]/hiConf1[2,2]
hiwAndw2 <- count(m,P2Conf=='hi'& P2Acc=='w')
PhiwAndw2 <- hiwAndw2[2,2]/hiConf2[2,2]
data[i,7]=PhiwAndw1
data[i,8]=PhiwAndw2
}
data
count(m,P1Acc=='w')
count(m,P1Acc=='w')[2,2]
data[i,9] <- count(m,P1Acc=='w')[2,2]
colLength <- 200
subCnt <- 20
data <- tibble(
lowConf1=as.double(1:subCnt),
lowConf2=as.double(1:subCnt),
lowAndw1=as.double(1:subCnt),
lowAndw2=as.double(1:subCnt),
hiConf1=as.double(1:subCnt),
hiConf2=as.double(1:subCnt),
hiAndw1=as.double(1:subCnt),
hiAndw2=as.double(1:subCnt),
wTotal1=as.double(1:subCnt),
wTotal2=as.double(1:subCnt),
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
#################
hiConf1 <-count(m,P1Conf=='hi')
PhiConf1 <- hiConf1[2,2]/(count(m))
hiConf2 <-count(m,P2Conf=='hi')
PhiConf2 <- hiConf2[2,2]/(count(m))
data[i,5]=PhiConf1
data[i,6]=PhiConf2
hiwAndw1 <- count(m,P1Conf=='hi'& P1Acc=='w')
PhiwAndw1 <- hiwAndw1[2,2]/hiConf1[2,2]
hiwAndw2 <- count(m,P2Conf=='hi'& P2Acc=='w')
PhiwAndw2 <- hiwAndw2[2,2]/hiConf2[2,2]
data[i,7]=PhiwAndw1
data[i,8]=PhiwAndw2
data[i,9] <- count(m,P1Acc=='w')[2,2]
data[i,10] <- count(m,P2Acc=='w')[2,2]
}
data
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .8, 'w', 'l'),
if_else(AccRNG1 < .6, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
#################
hiConf1 <-count(m,P1Conf=='hi')
PhiConf1 <- hiConf1[2,2]/(count(m))
hiConf2 <-count(m,P2Conf=='hi')
PhiConf2 <- hiConf2[2,2]/(count(m))
data[i,5]=PhiConf1
data[i,6]=PhiConf2
hiwAndw1 <- count(m,P1Conf=='hi'& P1Acc=='w')
PhiwAndw1 <- hiwAndw1[2,2]/hiConf1[2,2]
hiwAndw2 <- count(m,P2Conf=='hi'& P2Acc=='w')
PhiwAndw2 <- hiwAndw2[2,2]/hiConf2[2,2]
data[i,7]=PhiwAndw1
data[i,8]=PhiwAndw2
data[i,9] <- count(m,P1Acc=='w')[2,2]/200
data[i,10] <- count(m,P2Acc=='w')[2,2]/200
}
data
source('C:/Users/Jonathan Yuquimpo/OneDrive - University of Illinois - Urbana/r_metacognition/Simulation Trials Script.R', echo=TRUE)
data <- tibble(
lowConf1=as.double(1:subCnt),
lowConf2=as.double(1:subCnt),
lowAndw1=as.double(1:subCnt),
lowAndw2=as.double(1:subCnt),
hiConf1=as.double(1:subCnt),
hiConf2=as.double(1:subCnt),
hiAndw1=as.double(1:subCnt),
hiAndw2=as.double(1:subCnt),
wTotal1=as.double(1:subCnt),
wTotal2=as.double(1:subCnt),
)
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .5, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .82, 'w', 'l'),
if_else(AccRNG1 < .62, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .5, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
#################
hiConf1 <-count(m,P1Conf=='hi')
PhiConf1 <- hiConf1[2,2]/(count(m))
hiConf2 <-count(m,P2Conf=='hi')
PhiConf2 <- hiConf2[2,2]/(count(m))
data[i,5]=PhiConf1
data[i,6]=PhiConf2
hiwAndw1 <- count(m,P1Conf=='hi'& P1Acc=='w')
PhiwAndw1 <- hiwAndw1[2,2]/hiConf1[2,2]
hiwAndw2 <- count(m,P2Conf=='hi'& P2Acc=='w')
PhiwAndw2 <- hiwAndw2[2,2]/hiConf2[2,2]
data[i,7]=PhiwAndw1
data[i,8]=PhiwAndw2
data[i,9] <- count(m,P1Acc=='w')[2,2]/200
data[i,10] <- count(m,P2Acc=='w')[2,2]/200
}
data
for(i in 1:subCnt) {
m <- tibble(
#Horse = c(rep(1, colLength / 2), rep(2, colLength / 2)),
HorseRNG = if_else(
runif(colLength) < .5,'h1','h2'),
ConfRNG1 = runif(colLength),
ConfRNG2 = runif(colLength),
AccRNG1 = runif(colLength),
AccRNG2 = runif(colLength),
P1Conf = if_else(ConfRNG1 < .6, 'lo', 'hi'),
P1Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG1 < .82, 'w', 'l'),
if_else(AccRNG1 < .62, 'w', 'l')
),
P2Conf = if_else(ConfRNG2 < .6, 'lo', 'hi'),
P2Acc = if_else(
P1Conf == 'hi',
if_else(AccRNG2 < .7, 'w', 'l'),
if_else(AccRNG2 < .7, 'w', 'l')
)
)
loConf1 <-count(m,P1Conf=='lo')
PloConf1 <- loConf1[2,2]/(count(m))
loConf2 <-count(m,P2Conf=='lo')
PloConf2 <- loConf2[2,2]/(count(m))
data[i,1]=PloConf1
data[i,2]=PloConf2
lowAndw1 <- count(m,P1Conf=='lo'& P1Acc=='w')
PlowAndw1 <- lowAndw1[2,2]/loConf1[2,2]
lowAndw2 <- count(m,P2Conf=='lo'& P2Acc=='w')
PlowAndw2 <- lowAndw2[2,2]/loConf2[2,2]
data[i,3]=PlowAndw1
data[i,4]=PlowAndw2
#################
hiConf1 <-count(m,P1Conf=='hi')
PhiConf1 <- hiConf1[2,2]/(count(m))
hiConf2 <-count(m,P2Conf=='hi')
PhiConf2 <- hiConf2[2,2]/(count(m))
data[i,5]=PhiConf1
data[i,6]=PhiConf2
hiwAndw1 <- count(m,P1Conf=='hi'& P1Acc=='w')
PhiwAndw1 <- hiwAndw1[2,2]/hiConf1[2,2]
hiwAndw2 <- count(m,P2Conf=='hi'& P2Acc=='w')
PhiwAndw2 <- hiwAndw2[2,2]/hiConf2[2,2]
data[i,7]=PhiwAndw1
data[i,8]=PhiwAndw2
data[i,9] <- count(m,P1Acc=='w')[2,2]/200
data[i,10] <- count(m,P2Acc=='w')[2,2]/200
}
data
source('C:/Users/Jonathan Yuquimpo/OneDrive - University of Illinois - Urbana/r_metacognition/Simulation Trials Script.R', echo=TRUE)
print(data,n=30)
mutate(data,wDiff = wTotal1 -wTotal2 )
print(data,n=30)
mutate(data,wDiff = wTotal1 -wTotal2 )
data <- mutate(data,wDiff = wTotal1 -wTotal2 )
print(data,n=30)
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21/HLN Graph.R", echo=TRUE)
filter(data, correct == 'TRUE',
tgtPos == 3,
rwdType == 1,
colMatch == 1) %>%
group_by(subID, .dpro=F) %>%
summarize(Rejections=n(),
rt=median(rt)) %>%
select(Rejections)
Low <- bind_cols(
#Hits
filter(data, correct == 'TRUE',
tgtPos != 3,
rwdType == 1,
colMatch != 0) %>%
group_by(subID, .drop=F) %>%
summarize(Hits=n(),
rt=median(rt)) %>%
select(subID,Hits),
#Misses
filter(data, correct == 'FALSE',
tgtPos != 3,
rwdType == 1,
colMatch == 2) %>%
group_by(subID, .drop=F) %>%
summarize(Misses=n(),
rt=median(rt)) %>%
select(Misses),
#False Alarms
filter(data, correct == 'FALSE',
tgtPos == 3,
rwdType == 1,
colMatch == 1) %>%
group_by(subID, .drop=F) %>%
summarize(False_Alarms=n(),
rt=median(rt)) %>%
select(False_Alarms),
#Rejections
filter(data, correct == 'TRUE',
tgtPos == 3,
rwdType == 1,
colMatch == 1) %>%
group_by(subID, .drop=F) %>%
summarize(Rejections=n(),
rt=median(rt)) %>%
select(Rejections)
)
print(Low, n=25)
source("C:/Users/Jonathan/OneDrive - University of Illinois - Urbana/r_MemCapture/codeRanalysis/Exp2 11-19-21/HLN Graph.R", echo=TRUE)
